const { Schema, model } = require("mongoose");

const UserSchema = new Schema({
    name: String,
    lname_p: String,
    lname_m: String,
    email: String,
    password: String,
    password_code: String,
    n_partida: String,
    resident: { type: String, default: null },
    resident_country: { type: String, default: null },
    domicile: { type: String, default: null },
    domicile_country: { type: String, default: null },
    doc_file: String,
    doc_file_1: String,
    foto_dni: String,
    level: String,
    company: { type: Schema.Types.ObjectId, ref: "company" },
    company_name: String,
    document_type: String,
    username: String,
    number: String,
    job: String,
    cargo: String,
    nacimiento: Date,
    cellphone: String,
    telephone: String,
    country: String,
    address: String,
    department: String,
    province: String,
    district: String,
    edited_fields: {
        name: { type: Boolean, default: false },
        last_name_p: { type: Boolean, default: false },
        last_name_m: { type: Boolean, default: false },
        job: { type: Boolean, default: false },
        country: { type: Boolean, default: false },
        nacimiento: { type: Boolean, default: false },
        doc_file: { type: Boolean, default: false },
        doc_file_1: { type: Boolean, default: false },
        foto_dni: { type: Boolean, default: false },
    },
    is_active: { type: Boolean, default: true },
    confirmed_access: { type: Boolean, default: false },
    change_pass: { type: Boolean, default: false },
    content_promo: { type: Boolean, default: true },
    terms_of_service: { type: Boolean, default: false },
    bank_accounts: [
        {
            account: String,
            doc: String,
            code: String,
            doc_number: String,
            fullname: String,
            name: String,
            number: String,
            cci: String,
            account_type: String,
            currency: String,
            description: String,
        },
    ],
    pep: {
        institute: String,
        cargo: String,
        since: Date,
    },
    operations: [
        {
            id: { type: Schema.Types.ObjectId, ref: "operation" },
            created_at: { type: Date, default: Date.now },
        },
    ],
    special_service: {
        sp_compra: Number,
        sp_venta: Number,
    },
    promos: [
        {
            id: { type: Schema.Types.ObjectId, ref: "promocode" },
            amount: { type: Number, default: 1 },
        },
    ],
    has_pep_relatives: Boolean,
    pep_relatives: [{
        name: String,
        lname: String,
        relationship: String,
    }],
    created_at: { type: Date, default: Date.now },
});

module.exports = model('user', UserSchema);
